load("@aspect_rules_swc//swc:defs.bzl", "swc")
load("@aspect_rules_ts//ts:defs.bzl", "ts_project", "ts_config")
load("@aspect_rules_js//js:defs.bzl", "js_binary", "js_library", "js_run_devserver")
load("@bazel_skylib//lib:partial.bzl", "partial")
load("@jest//:defs.bzl", "jest_test")
load("@npm//:@nestjs/cli/package_json.bzl", nest_bin = "bin")

SRC_PATTERNS = [
    "src/**/*.ts"
]

TEST_PATTERNS = [
    "src/**/*.test.ts",
    "src/**/*.spec.ts"
]

SRCS = glob(include = SRC_PATTERNS, exclude = TEST_PATTERNS) + glob([".env*"])

ts_config(
    name = "tsconfig",
    src = "tsconfig.json",
    deps = ["//:tsconfig.node"]
)

# This is a binary target that is generated by the @nestjs/cli package
# Can be used to run the nest cli commands
nest_bin.nest_binary(
    name = "nestcli"
)

# This runs the backend using nest cli
# Needs to be benchmarked against the js_run_devserver
# To see which is faster
js_run_devserver(
    name = "dev",
    args = ["start", "--watch"],
    chdir = package_name(),
    tool = ":nestcli",
    data = SRCS + [
        "//:node_modules/@nestjs/common",
        "//:node_modules/@nestjs/core",
        "//:node_modules/@nestjs/cli",
        "//:node_modules/@types/node",
        "//:node_modules/tslib",
        "//:node_modules/source-map-support",
        ":tsconfig",
    ]
)



# For more information about using swc to transpile please see the ts_project_transpiler example
# https://github.com/aspect-build/bazel-examples/tree/main/ts_project_transpiler
ts_project(
    name = "build",
    srcs = SRCS,
    tsconfig = ":tsconfig",
    declaration = True,
    source_map = True,
    transpiler = partial.make(
        swc,
        swcrc = ".swcrc",
        # out_dir = "dist"
    ),
    deps = [
        "//:node_modules/@nestjs/common",
        "//:node_modules/@nestjs/core",
        "//:node_modules/@types/node",
        "//:node_modules/tslib",
    ],
)

js_library(
    name = "jest_config",
    srcs = ["jest.config.js"],
    visibility = ["//visibility:public"],
)

# This runs the backend using swc transpiler as the transpiler
# Also references actual production build
js_binary(
    name = "dev_swc",
    data = [
        ":build",

        # Added by swc during transpilation and used at runtime
        "//:node_modules/regenerator-runtime",
    ],
    entry_point = "src/main.js",
)

jest_test(
    name = "test",
    config = ":jest_config",
    data = [
        ":build",
        "//:node_modules/ts-jest",
        "//:node_modules/@nestjs/testing",
        "//:node_modules/@types/jest",
    ] + glob(include = TEST_PATTERNS),
)